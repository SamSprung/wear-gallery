apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30

    resourcePrefix "lib_"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = 1.8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesAndroidVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion")
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation("androidx.lifecycle:lifecycle-process:$lifecycleVersion")
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    compileOnly("me.chenhe:wearmsger:$wearMsgerVersion")
    api ("com.jakewharton.timber:timber:$timber")


    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test:core:$testVersion" // Robolectric environment
    testImplementation "org.mockito:mockito-core:$mockitoVersion" // Mockito framework
    testImplementation "org.amshove.kluent:kluent-android:$kluentVersion"
}
